{"version":3,"sources":["ajax.js","fillQuote.js","fillQuoteAuthor.js","fillQuoteText.js","bundle.js","share.js"],"names":["AJAX","_ref","url","method","data","sendData","accept","responseType","timeout","headers","user","password","onload","onloadstart","onloadend","onerror","onprogress","onabort","onreadystatechange","ontimeout","promise","Promise","resolve","reject","req","XMLHttpRequest","Array","isArray","_typeof","previous","ind","encodeURIComponent","current","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Object","keys","Symbol","iterator","next","done","key","value","err","return","this","status","call","e","outputTspans","str","cb","len","length","tspan","document","createElementNS","svgNS","ch","charAt","nextCh","emptyQuote","emptyTextOutput","emptyAuthor","onQuoteFilled","quoteFilled","quoteBeingFilled","getQuote","fillQuote","quote","fillQuoteText","fillQuoteAuthor","startTextAnimations","fillQuoteImmediately","fillQuoteTextImmediately","fillQuoteAuthorImmediately","requestQuote","X-Mashape-Key","Accept","Content-Type","then","quoteGetSuccess","quoteGetError","result","error","addToAuthorTxt","authorTxt","resizeSvgAuthorToFit","svgAuthor","onAuthorAnimationEnd","_ref2","target","tagName","accumAuthor","lastAuthorTspan","onQuoteAuthorFilled","clone","cloneNode","doneWithAuthorTspans","lastOne","startAuthorAnimations","startTspanAnimation","nextSibling","style","display","clearInterval","quoteAuthorIntervalId","children","quoteAuthorBeingFilled","addToDynamicTxt","firstChar","textContent","secondChar","wordStartTspan","dynamicTxt","spaceWidthShift","getBoundingClientRect","width","stillFirstLine","initialSpaceWidthShift","svgWidth","resizeSvgTxtToFit","svgTxt","onTextAnimationEnd","_ref3","firstInLine","placeIntoStatic","accumTxt","lastTextTspan","hasChildNodes","staticTxt","setAttribute","childElementCount","finishedBefore","onQuoteTextFilled","doneWithTextTspans","quoteTextIntervalId","quoteTextBeingFilled","obj","constructor","prototype","options","getElementById","visibilityState","authorCharAddFrequency","querySelector","textCharAddFrequency","height","left","window","innerWidth","top","innerHeight","author","opts"],"mappings":"wBAGA,SAAAA,GAAAC,GAAA,GAAAC,GAAAD,EAAAC,IAAAC,EAAAF,EAAAE,OAAAC,EAAAH,EAAAG,KAAAC,EAAAJ,EAAAI,SAAAC,EAAAL,EAAAK,OAAAC,EAAAN,EAAAM,aAAAC,EAAAP,EAAAO,QAAAC,EAAAR,EAAAQ,QAAAC,EAAAT,EAAAS,KAAAC,EAAAV,EAAAU,SAAAC,EAAAX,EAAAW,OAAAC,EAAAZ,EAAAY,YAAAC,EAAAb,EAAAa,UAAAC,EAAAd,EAAAc,QAAAC,EAAAf,EAAAe,WAAAC,EAAAhB,EAAAgB,QAAAC,EAAAjB,EAAAiB,mBAAAC,EAAAlB,EAAAkB,UACAC,EAAA,GAAAC,SAAA,SAAAC,EAAAC,GAEA,GAAAC,GAAA,GAAAC,eAGA,iBAAArB,GACAF,GAAAA,EAAAA,WAAAA,KAAAA,EAAAA,IAAAA,EAEAwB,MAAAC,QAAAvB,GACAF,GAAAA,IAAAA,EAAAA,KAAAA,KAEA,YAAA,mBAAAE,GAAA,YAAAwB,EAAAxB,MACAF,GAAAA,IAAAA,OAAAA,KAAAA,GAAAA,OAAAA,SAAAA,EAAAA,EAAAA,GAAA,MAAA2B,IAAAC,EAAA,EAAA,IAAA,IAAAC,mBAAAC,GAAA,IAAAD,mBAAA3B,EAAA4B,KAAA,KAIAR,EAAAA,KAAAA,GAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAhBA,IAAAS,IAAA,EAAAC,GAAA,EAAAC,EAAAC,MAAA,KAkBA,IAAA,GAAAC,GAAAC,EAAAC,OAAAC,KAAA/B,GAAAgC,OAAAC,cAAAT,GAAAI,EAAAC,EAAAK,QAAAC,MAAAX,GAAA,EAAA,CAAA,GAAAY,GAAAR,EAAAS,KACAtB,GAAAA,iBAAAA,EAAAA,EAAAA,KAnBA,MAAAuB,GAAAb,GAAA,EAAAC,EAAAY,EAAA,QAAA,KAAAd,GAAAK,EAAAU,QAAAV,EAAAU,SAAA,QAAA,GAAAd,EAAA,KAAAC,IAsBA7B,GACAkB,EAAAA,iBAAAA,SAAAA,MAAAA,QAAAA,GAAAA,EAAAA,KAAAA,KAAAA,GAGAjB,IAAAiB,EAAAjB,aAAAA,GACAC,IAAAgB,EAAAhB,QAAAA,GAEAgB,EAAAA,OAAAA,SAAAA,GACAyB,KAAAC,QAAA,KAAAD,KAAAC,OAAA,KACA5B,EAAAA,KAAAA,UACAV,GAAAA,EAAAuC,KAAAF,KAAAG,KAEA7B,EAAAA,KAAAA,YACAR,GAAAA,EAAAoC,KAAAF,KAAAG,KAGA5B,EAAAA,QAAAA,SAAAA,GACAD,EAAAA,KAAAA,YACAR,GAAAA,EAAAoC,KAAAF,KAAAG,IAGAb,OAAAA,OAAAA,GAAAA,YAAAA,EAAAA,UAAAA,EAAAA,WAAAA,EAAAA,QAAAA,EAAAA,mBAAAA,EAAAA,UAAAA,IAEAf,EAAAA,KAAAA,IAGA,OAAAJ,GC1CA,QAAAiC,GAAAC,EAAAC,EAAAX,GACAU,EAAAA,EAAAA,QAAAA,UAAAA,MAAAA,MACA,IAAAE,GAAAF,EAAAG,MACA,IAAA,IAAAD,EAEA,IAAA,GAAA1B,GAAA,EAAAA,EAAA0B,GAAA,CACA,GAAAE,GAAAC,SAAAC,gBAAAC,EAAA,SAEAC,EAAAR,EAAAS,OAAAjC,IACA,IAAA,MAAAgC,GAAA,OAAAA,GAAAhC,EAAA0B,EAAA,EAAA,CACA,GAAAQ,GAAAV,EAAAS,OAAAjC,MACA,MAAAkC,GAAA,OAAAA,GAAAlC,EAAA0B,EAAA,KAAAQ,GAAAV,EAAAS,OAAAjC,MAEAgC,GAAAA,EAEAJ,EAAAA,YAAAA,EACAH,EAAAA,GACAzB,IAAA0B,GAAAZ,GACAA,EAAAA,IAKA,QAAAqB,KACAC,IACAC,IAGA,QAAAC,KACAC,GAAAA,EACAC,GAAAA,EACAC,EAAAA,UAAAA,OAAAA,MAIA,QAAAC,KACAC,IAEAR,IACAK,GAAAA,EAEAI,IACAC,IAEAC,KAIA,QAAAC,KACAC,IACAC,IAeA,QAAAC,KACA,MAAAV,OACAO,MAIAN,EAAAA,UAAAA,IAAAA,UAEAvE,IACAE,IAAAA,mEACAO,SACAwE,gBAAA,qDACAC,OAAA,mBACAC,eAAA,uCALAC,KAAAC,EAAAC,IAUA,QAAAD,GAAAE,GAEAd,EAAAA,KAAAA,MAAAA,GACAD,IAGA,QAAAc,GAAAE,GAEAjB,EAAAA,UAAAA,OAAAA,MC3FA,QAAAkB,GAAA/B,GACAgC,EAAAA,YAAAA,GAGA,QAAAC,KACAC,EAAAA,MAAAA,MAAAA,EAAAA,UAAAA,MAAAA,EAAAA,KAIA,QAAAC,GAAAC,GAAA,GAAAC,GAAAD,EAAAC,MACA,WAAAA,EAAAC,UACAC,EAAAA,aAAAA,EAAAA,YACAF,EAAAA,SAEAA,IAAAG,IACAA,EAAAA,KACAC,MAMA,QAAAhC,KACA,GAAAiC,GAAAV,EAAAW,WAAA,EACAD,GAAAA,UAAAA,OAAAA,SAAAA,YAEAH,EAAAA,SAAAA,gBAAAA,EAAAA,SACAA,EAAAA,UAAAA,IAAAA,SAEAG,EAAAA,YAAAA,GAEAR,EAAAA,aAAAA,EAAAA,GACAF,EAAAA,EAGA,QAAAY,GAAAC,GACAL,EAAAA,EACAP,IAGA,QAAAa,KAaA,QAAAC,KAEA/C,IAAAA,EAAAA,EAAAgD,aAEAhD,EAAAA,EAAAiD,MAAAC,QAAA,QAAAC,cAAAC,GAhBApB,EAAAA,UAAAA,IAAAA,SAAAA,YACAmB,cAAAA,EAIA,IAAAnD,GAAAgC,EAAAqB,SAAA,EACArD,KAEAA,EAAAA,MAAAA,QAAAA,QAEAoD,EAAAA,YAAAA,EAAAA,IAWA,QAAAnC,KACAqC,GAAAA,EACAtB,EAAAA,UAAAA,IAAAA,WACArC,EAAAA,EAAAA,OAAAA,EAAAA,GAGA,QAAA8C,KACAa,GAAAA,EACA5C,IAGA,QAAAW,KACA8B,cAAAA,GACAnB,EAAAA,UAAAA,OAAAA,WAAAA,SAAAA,WACAS,IC3EA,QAAAc,GAAAvD,GACA,GAAAwD,GAAAxD,EAAAyD,YAAApD,OAAA,GACAqD,EAAA1D,EAAAyD,YAAApD,OAAA,EAiBA,IAfA,MAAAmD,IACAG,EAAAA,GAGA,OAAAH,GAAA,OAAAE,IACA1D,EAAAA,aAAAA,IAAAA,OAAAA,GAAAA,MAAAA,EAAAA,EAAAA,GAAAA,GACAA,EAAAA,aAAAA,KAAAA,OACAA,EAAAA,aAAAA,GAIA4D,EAAAA,YAAAA,IAIAC,GAAAF,EACA,IACAE,GAAAA,KAAAA,MAAAA,EAAAA,uBAAAA,GAAAA,EAAAA,EAAAA,uBAAAA,GAAAA,GACA,MAAAnE,IAKAkE,EAAAE,wBAAAC,OAAAC,EAAAH,GAAAI,EAAA,GAAAC,IACAP,EAAAA,aAAAA,IAAAA,GAAAA,GACAA,EAAAA,aAAAA,KAAAA,OACAA,EAAAA,aAAAA,EACAK,GAAAA,GAOA,QAAAG,KACAC,EAAAA,MAAAA,OAAAA,EAAAA,UAAAA,OAAAA,EAAAA,UAAAA,OAAAA,GAAAA,KAKA,QAAAC,GAAAC,GAAA,GAAAjC,GAAAiC,EAAAjC,MACA,WAAAA,EAAAC,UAEAD,EAAAkC,aACAC,IACAC,EAAAA,EACAA,EAAAA,UAAAA,IAAAA,SACAA,EAAAA,aAAAA,IAAAA,KAEAA,EAAAA,aAAAA,EAAAA,YACApC,EAAAA,UAGAA,IAAAqC,GAAAd,EAAAe,kBACAD,EAAAA,KACAF,IACAC,EAAAA,SAAAA,gBAAAA,EAAAA,SACAA,EAAAA,UAAAA,IAAAA,SACAG,EAAAD,iBAAAf,EAAAiB,aAAA,IAAAD,EAAAE,kBAAA,EAAA,MACAlB,EAAAA,YAAAA,GACAmB,IAAAA,EACAC,MAKA,QAAAR,KACA,GAAAhB,GAAAiB,EAAAhB,YAAApD,OAAA,GACAqD,EAAAe,EAAAhB,YAAApD,OAAA,EACAoE,GAAAA,aAAAA,IAAAA,MAAAA,GAAAA,OAAAA,GAAAA,MAAAA,EAAAA,GAAAA,EAAAA,GACAM,IAAAH,EAAAD,kBACAI,IAAAA,EACAN,EAAAA,aAAAA,KAAAA,QAEAG,EAAAA,YAAAA,GACAhB,EAAAA,aAAAA,IAAAA,EAAAA,kBAAAA,MAKA,QAAApD,KACA,GAAAkC,GAAAkC,EAAAjC,WAAA,EAEAyB,GAAAA,aAAAA,EAAAA,GACAQ,EAAAA,EAEAlC,EAAAA,EAAAA,WAAAA,GACAA,EAAAA,aAAAA,IAAAA,OACAA,EAAAA,UAAAA,OAAAA,SAAAA,YAEA+B,EAAAA,SAAAA,gBAAAA,EAAAA,SACAA,EAAAA,UAAAA,IAAAA,SAEA/B,EAAAA,YAAAA,GACA0B,EAAAA,aAAAA,EAAAA,GACAR,EAAAA,EAGA,QAAAqB,GAAApC,GACA6B,EAAAA,EACAP,IAGA,QAAAjD,KAaA,QAAA6B,KAEA/C,IAAAA,EAAAA,EAAAgD,aAEAhD,EAAAA,EAAAiD,MAAAC,QAAA,SAEAC,cAAAA,GACAL,KAnBAc,EAAAA,UAAAA,IAAAA,SAAAA,YACAT,cAAAA,EAIA,IAAAnD,GAAA4D,EAAAP,SAAA,EACArD,KAEAA,EAAAA,MAAAA,QAAAA,QAEAkF,EAAAA,YAAAA,EAAAA,IAcA,QAAAlE,KACAgD,EAAAA,GAAAA,EACAJ,EAAAA,UAAAA,IAAAA,WACAjE,EAAAA,EAAAA,MAAAA,EAAAA,GAGA,QAAAqF,KACAG,GAAAA,EAGA,QAAA/D,KACA+B,cAAAA,GACAiB,EAAAA,MAAAA,WAAAA,OACAR,EAAAA,UAAAA,OAAAA,WAAAA,SAAAA,WAEAQ,EAAAA,UACAA,EAAAA,MAAAA,WAAAA,GACAY,IC9JA,GAAA9G,GAAA,kBAAAa,SAAA,gBAAAA,QAAAC,SAAA,SAAAoG,GAAA,aAAAA,IAAA,SAAAA,GAAA,MAAAA,IAAA,kBAAArG,SAAAqG,EAAAC,cAAAtG,QAAAqG,IAAArG,OAAAuG,UAAA,eAAAF,GJqDA9I,GAAAA,IAAAA,SAAAA,GAEA,MADAiJ,GAAAA,OAAAA,MACAjJ,EAAAiJ,IAGAjJ,EAAAA,IAAAA,SAAAA,GAEA,MADAiJ,GAAAA,OAAAA,MACAjJ,EAAAiJ,IAGAjJ,EAAAA,KAAAA,SAAAA,GAEA,MADAiJ,GAAAA,OAAAA,OACAjJ,EAAAiJ,IAGAjJ,EAAAA,OAAAA,SAAAA,GAEA,MADAiJ,GAAAA,OAAAA,SACAjJ,EAAAiJ,GCrEA,IAAA1E,GAAAZ,SAAAuF,eAAA,aAEArF,EAAA,6BACAY,EAAA,OAEAJ,GAAA,EAAAC,GAAA,CAuDAC,GAAAA,QAAAA,EAKAZ,SAAAA,iBAAAA,mBAAAA,WACA,YAAAA,SAAAwF,iBAAA7E,GACAO,MAkCAlB,SAAAA,iBAAAA,mBAAAA,WAEAqB,KCvGA,IAAAY,GAAAjC,SAAAuF,eAAA,cACAxD,EAAA/B,SAAAuF,eAAA,UAEAE,EAAA,IACAtC,EAAA,OAAAE,GAAA,EAEAd,EAAA,OASAD,EAAAP,EAAA2D,cAAA,cAYAzD,GAAAA,iBAAAA,eAAAA,EC3BA,IAAA0B,GAAA3D,SAAAuF,eAAA,kBACAZ,EAAA3E,SAAAuF,eAAA,iBACApB,EAAAnE,SAAAuF,eAAA,cAEAI,EAAA,IAAA3B,GAAA,GACAiB,EAAA,OAAAC,GAAA,EAEAT,EAAA,OAAAf,EAAA,OAAAE,EAAA,OAAAK,EAAAE,EAAAN,wBAAAC,MAAAC,GAAA,EA2CAS,EAAAb,EAAA+B,cAAA,eACAZ,IAAA,CAuCAX,GAAAA,iBAAAA,eAAAA,GE1FAnE,SAAAA,eAAAA,QAAAA,QAAAA,SAAAA,GAIA,GAHAP,EAAAA,iBACAA,EAAAA,kBAEAqB,EAAA,CAEAH,GACAO,GAGA,IAAA4C,GAAA,IAAA8B,EAAA,IAAAC,EAAAC,OAAAC,WAAAjC,EAAA,GAAAkC,GAAAF,OAAAG,YAAAL,GAAA,EAAArJ,EAAA,8EAAA6B,mBAAA,IAAA0C,EAAAA,MAAA,KAAAA,EAAAoF,QAAAC,EAAA,kEAAArC,EAAA,6BAAA8B,EAAA,2BAAAC,EAAA,0BAAAG,CAYAF,QAAAA,KAAAA,EAAAA,UAAAA","file":"bundle.js","sourcesContent":["//////////////////////////////////////////////////////\n// AJAX LOGIC\n\nfunction AJAX({url, method, data, sendData, accept, responseType, timeout, headers, user, password, onload, onloadstart, onloadend, onerror, onprogress, onabort, onreadystatechange, ontimeout}) {\n\tconst promise = new Promise( function (resolve, reject) {\n\n\t\tconst req = new XMLHttpRequest();\n\n\n\t\tif(typeof data === \"string\") {\n\t\t\turl += data.startsWith(\"?\") ? data : \"?\" + data;\n\n\t\t} else if(Array.isArray(data)){\n\t\t\turl += \"?\" + data.join(\"&\");\n\n\t\t} else if(typeof data === \"object\") {\n\t\t\turl += \"?\" + Object.keys(data).reduce((previous, current, ind) =>  previous + (ind > 0 ? \"&\" : \"\" ) + encodeURIComponent(current) + \"=\" + encodeURIComponent(data[current]), \"\");\n\n\t\t}\n\n\t\treq.open(method || \"GET\", url, true, user, password);\n\n\t\tfor(let key of Object.keys(headers)) {\n\t\t\treq.setRequestHeader(key, headers[key]);\n\t\t}\n\n\t\tif(accept) {\n\t\t\treq.setRequestHeader(\"Accept\", Array.isArray(accept) ? accept.join(\",\") : accept);\n\t\t}\n\n\t\tif(responseType) req.responseType = responseType;\n\t\tif(timeout) req.timeout = timeout;\n\n\t\treq.onload = function (e) {\n\t\t\tif (this.status >= 200 && this.status < 300) {\n\t\t\t\tresolve(this.response);\n\t\t\t\tif(onload) onload.call(this, e);\n\t\t\t} else {\n\t\t\t\treject(this.statusText);\n\t\t\t\tif(onerror) onerror.call(this, e);\n\t\t\t}\n\t\t};\n\t\treq.onerror = function (e) {\n\t\t\treject(this.statusText);\n\t\t\tif(onerror) onerror.call(this, e);\n\t\t};\n\n\t\tObject.assign(req, {onloadstart, onloadend, onprogress, onabort, onreadystatechange, ontimeout});\n\n\t\treq.send(sendData);\n\t});\n\n\treturn promise;\n}\n\nAJAX.get = function (options) {\n\toptions.method = \"GET\";\n\treturn AJAX(options);\n};\n\nAJAX.put = function (options) {\n\toptions.method = \"PUT\";\n\treturn AJAX(options);\n};\n\nAJAX.post = function (options) {\n\toptions.method = \"POST\";\n\treturn AJAX(options);\n};\n\nAJAX.delete = function (options) {\n\toptions.method = \"DELETE\";\n\treturn AJAX(options);\n};\n","//////////////////////////////////////////////////////\n// FILL QUOTE LOGIC\n\nconst getQuote = document.getElementById(\"get-quote\");\n\nconst svgNS = \"http://www.w3.org/2000/svg\";\nlet quote;\n\nlet quoteFilled = false, quoteBeingFilled = false;\n\nfunction outputTspans(str, cb, done) {\n\tstr = str.replace(/\\n+\\s*/g, \"\\n\").trim();\n\tconst len = str.length;\n\tif(len === 0) return;\n\n\tfor (let ind = 0; ind < len;) {\n\t\tconst tspan = document.createElementNS(svgNS, \"tspan\");\n\n\t\tlet ch = str.charAt(ind++);\n\t\tif(ch === \" \" || ch === \"\\n\" && ind < len-1) {\n\t\t\tlet nextCh =str.charAt(ind++);\n\t\t\tif(nextCh === \" \" || nextCh === \"\\n\" && ind < len - 1) nextCh += str.charAt(ind++);\n\n\t\t\tch += nextCh;\n\t\t}\n\t\ttspan.textContent = ch;\n\t\tcb(tspan);\n\t\tif(ind === len && done) {\n\t\t\tdone(tspan);\n\t\t}\n\t}\n}\n\nfunction emptyQuote() {\n\temptyTextOutput();\n\temptyAuthor();\n}\n\nfunction onQuoteFilled() {\n\tquoteFilled = true;\n\tquoteBeingFilled = false;\n\tgetQuote.classList.remove(\"on\");\n}\n\n\nfunction fillQuote() {\n\tif(!quote) return;\n\n\temptyQuote();\n\tquoteBeingFilled = true;\n\n\tfillQuoteText();\n\tfillQuoteAuthor();\n\n\tstartTextAnimations();\n\n}\n\nfunction fillQuoteImmediately() {\n\tfillQuoteTextImmediately();\n\tfillQuoteAuthorImmediately();\n}\n\ngetQuote.onclick = requestQuote;\n\n\n// Inactive browser tabs buffer some of the setInterval or setTimeout functions(at least in Chrome), and then execute all at once\n// Messes up timing-dependent animations\ndocument.addEventListener(\"visibilitychange\", function() {\n\tif(document.visibilityState === \"visible\" && quoteBeingFilled) {\n\t\tfillQuoteImmediately();\n\t}\n});\n\n\nfunction requestQuote() {\n\tif(quoteBeingFilled) {\n\t\tfillQuoteImmediately();\n\t\treturn;\n\t}\n\n\tgetQuote.classList.add(\"on\");\n\n\tAJAX({\n\t\turl: 'https://andruxnet-random-famous-quotes.p.mashape.com/?cat=famous',\n\t\theaders: {\n\t\t\t\"X-Mashape-Key\": \"LAPt9A7eY1mshE4ecB0COT48Gt6dp1Dxa87jsnNrwQGgt96xMh\",\n\t\t\t\"Accept\": \"application/json\",\n\t\t\t\"Content-Type\": \"application/x-www-form-urlencoded\"\n\t\t}\n\t}).then(quoteGetSuccess, quoteGetError);\n}\n\nfunction quoteGetSuccess(result) {\n\t// console.log(JSON.parse(result), typeof result);\n\tquote = JSON.parse(result);\n\tfillQuote();\n}\n\nfunction quoteGetError(error) {\n\tconsole.log(\"Error executing AJAX request:\", error);\n\tgetQuote.classList.remove(\"on\");\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n\t// console.log(\"DOM fully loaded and parsed\");\n\trequestQuote();\n});\n","//////////////////////////////////////////////////////\n// FILL QUOTE AUTHOR LOGIC\n\nconst svgAuthor = document.getElementById(\"svg-author\");\nlet authorTxt = document.getElementById(\"author\");\n\nconst authorCharAddFrequency = 100;\nlet quoteAuthorIntervalId, quoteAuthorBeingFilled = false;\n\nlet lastAuthorTspan;\nfunction addToAuthorTxt(tspan) {\n\tauthorTxt.appendChild(tspan);\n}\n\nfunction resizeSvgAuthorToFit() {\n\tsvgAuthor.style.width = authorTxt.getBBox().width + 5 + \"px\";\n}\n\nlet accumAuthor = authorTxt.querySelector(\"tspan.accum\");\nfunction onAuthorAnimationEnd({target}) {\n\tif(target.tagName === \"tspan\") {\n\t\taccumAuthor.textContent += target.textContent;\n\t\ttarget.remove();\n\n\t\tif(target === lastAuthorTspan) {\n\t\t\tlastAuthorTspan = null;\n\t\t\tonQuoteAuthorFilled();\n\t\t}\n\t}\n}\nsvgAuthor.addEventListener(\"animationend\", onAuthorAnimationEnd);\n\nfunction emptyAuthor() {\n\tconst clone = authorTxt.cloneNode(false);\n\tclone.classList.remove(\"hidden\", \"animated\");\n\n\taccumAuthor = document.createElementNS(svgNS, \"tspan\");\n\taccumAuthor.classList.add(\"accum\");\n\n\tclone.appendChild(accumAuthor);\n\n\tsvgAuthor.replaceChild(clone, authorTxt);\n\tauthorTxt = clone;\n}\n\nfunction doneWithAuthorTspans(lastOne) {\n\tlastAuthorTspan = lastOne;\n\tresizeSvgAuthorToFit();\n}\n\nfunction startAuthorAnimations() {\n\tauthorTxt.classList.add(\"hidden\", \"animated\");\n\tclearInterval(quoteAuthorIntervalId);\n\t// console.log(\"STARTING ANIMATIONS on\", authorTxt);\n\n\t// first one is tspan.accum, skip it\n\tlet tspan = authorTxt.children[1];\n\tif(!tspan) return;\n\t// immediate animation of first character\n\ttspan.style.display = \"unset\";\n\n\tquoteAuthorIntervalId = setInterval(startTspanAnimation, authorCharAddFrequency);\n\n\tfunction startTspanAnimation() {\n\t\t// protect from button mashing -> events firing off in quick succession\n\t\tif(tspan) tspan = tspan.nextSibling;\n\n\t\tif(tspan) tspan.style.display = \"unset\";\n\t\telse clearInterval(quoteAuthorIntervalId);\n\t}\n}\n\nfunction fillQuoteAuthor() {\n\tquoteAuthorBeingFilled = true;\n\tauthorTxt.classList.add(\"dynamic\");\n\toutputTspans(quote.author, addToAuthorTxt, doneWithAuthorTspans);\n}\n\nfunction onQuoteAuthorFilled() {\n\tquoteAuthorBeingFilled = false;\n\tonQuoteFilled();\n}\n\nfunction fillQuoteAuthorImmediately() {\n\tclearInterval(quoteAuthorIntervalId);\n\tauthorTxt.classList.remove(\"animated\", \"hidden\", \"dynamic\");\n\tonQuoteAuthorFilled();\n}\n","//////////////////////////////////////////////////////\n// FILL QUOTE TEXT LOGIC\n\nlet dynamicTxt = document.getElementById(\"dynamic-output\");\nlet staticTxt = document.getElementById(\"static-output\");\nconst svgTxt = document.getElementById(\"svg-output\");\n\nconst textCharAddFrequency = 120, initialSpaceWidthShift = -11;\nlet quoteTextIntervalId,  quoteTextBeingFilled = false;\n\nlet lastTextTspan, wordStartTspan, spaceWidthShift, svgWidth = svgTxt.getBoundingClientRect().width, stillFirstLine = false;\nfunction addToDynamicTxt(tspan) {\n\tconst firstChar = tspan.textContent.charAt(0);\n\tconst secondChar = tspan.textContent.charAt(1);\n\n\tif(firstChar === \" \") {\n\t\twordStartTspan = tspan;\n\t}\n\n\tif(firstChar === \"\\n\" || secondChar === \"\\n\") {\n\t\ttspan.setAttribute(\"x\", secondChar !== \"\\n\" && secondChar !== \" \" ? 0 : spaceWidthShift || initialSpaceWidthShift);\n\t\ttspan.setAttribute(\"dy\", \"1em\");\n\t\ttspan.firstInLine = true;\n\t}\n\t// console.log(\"BEFORE\", tspan.textContent, dynamicTxt.getBoundingClientRect().width - (stillFirstLine ? (spaceWidthShift || initialSpaceWidthShift) : 0), \">\", svgWidth, \"=\", dynamicTxt.getBoundingClientRect().width - (stillFirstLine ? (spaceWidthShift || initialSpaceWidthShift) : 0) > svgWidth);\n\n\tdynamicTxt.appendChild(tspan);\n\n\t// console.log(\"AFTER\", tspan.textContent, dynamicTxt.getBoundingClientRect().width - (stillFirstLine ? (spaceWidthShift || initialSpaceWidthShift) : 0), \">\", svgWidth, \"=\", dynamicTxt.getBoundingClientRect().width - (stillFirstLine ? (spaceWidthShift || initialSpaceWidthShift) : 0) > svgWidth);\n\n\tif(!spaceWidthShift && wordStartTspan ) {\n\t\ttry {\n\t\t\tspaceWidthShift = -Math.round(wordStartTspan.getStartPositionOfChar(1).x - wordStartTspan.getStartPositionOfChar(0).x);\n\t\t} catch(e) {\n\t\t\tconsole.log(\"Error\", e.message);\n\t\t}\n\t}\n\n\tif(dynamicTxt.getBoundingClientRect().width - (stillFirstLine ? (spaceWidthShift || initialSpaceWidthShift) : 0) > svgWidth) {\n\t\twordStartTspan.setAttribute(\"x\", spaceWidthShift || initialSpaceWidthShift);\n\t\twordStartTspan.setAttribute(\"dy\", \"1em\");\n\t\twordStartTspan.firstInLine = true;\n\t\tstillFirstLine = false;\n\n\t\t// console.log(\"BREAK ON\", wordStartTspan.textContent);\n\t\t// console.log(\"AFTER\", tspan.textContent, dynamicTxt.getBoundingClientRect().width - (spaceWidthShift || initialSpaceWidthShift), \">\", svgWidth, \"=\", dynamicTxt.getBoundingClientRect().width - (spaceWidthShift || initialSpaceWidthShift) > svgWidth);\n\t}\n}\n\nfunction resizeSvgTxtToFit() {\n\tsvgTxt.style.height = staticTxt.getBBox().height + dynamicTxt.getBBox().height + 12 + \"px\";\n}\n\nlet accumTxt = dynamicTxt.querySelector(\"tspan.accum\");\nlet finishedBefore = false;\nfunction onTextAnimationEnd({target}) {\n\tif(target.tagName === \"tspan\") {\n\n\t\tif(target.firstInLine) {\n\t\t\tplaceIntoStatic();\n\t\t\taccumTxt = target;\n\t\t\taccumTxt.classList.add(\"accum\");\n\t\t\taccumTxt.setAttribute(\"x\", 0);\n\t\t} else {\n\t\t\taccumTxt.textContent += target.textContent;\n\t\t\ttarget.remove();\n\t\t}\n\n\t\tif(target === lastTextTspan && dynamicTxt.hasChildNodes()) {\n\t\t\tlastTextTspan = null;\n\t\t\tplaceIntoStatic();\n\t\t\taccumTxt = document.createElementNS(svgNS, \"tspan\");\n\t\t\taccumTxt.classList.add(\"accum\");\n\t\t\tif(staticTxt.hasChildNodes()) dynamicTxt.setAttribute(\"y\", staticTxt.childElementCount + 1 + \"em\");\n\t\t\tdynamicTxt.appendChild(accumTxt);\n\t\t\tfinishedBefore = true;\n\t\t\tonQuoteTextFilled();\n\t\t}\n\t}\n}\n\nfunction placeIntoStatic() {\n\tconst firstChar = accumTxt.textContent.charAt(0);\n\tconst secondChar = accumTxt.textContent.charAt(1);\n\taccumTxt.setAttribute(\"x\", firstChar === \" \" || (firstChar === \"\\n\" && secondChar === \" \") ? spaceWidthShift || initialSpaceWidthShift : 0);\n\tif(finishedBefore && staticTxt.hasChildNodes()) {\n\t\tfinishedBefore = false;\n\t\taccumTxt.setAttribute(\"dy\", \"1em\");\n\t}\n\tstaticTxt.appendChild(accumTxt);\n\tdynamicTxt.setAttribute(\"y\", staticTxt.childElementCount + \"em\");\n}\n\nsvgTxt.addEventListener(\"animationend\", onTextAnimationEnd);\n\nfunction emptyTextOutput() {\n\tlet clone = staticTxt.cloneNode(false);\n\n\tsvgTxt.replaceChild(clone, staticTxt);\n\tstaticTxt = clone;\n\n\tclone = dynamicTxt.cloneNode(false);\n\tclone.setAttribute(\"y\", \"1em\");\n\tclone.classList.remove(\"hidden\", \"animated\");\n\n\taccumTxt = document.createElementNS(svgNS, \"tspan\");\n\taccumTxt.classList.add(\"accum\");\n\n\tclone.appendChild(accumTxt);\n\tsvgTxt.replaceChild(clone, dynamicTxt);\n\tdynamicTxt = clone;\n}\n\nfunction doneWithTextTspans(lastOne) {\n\tlastTextTspan = lastOne;\n\tresizeSvgTxtToFit();\n}\n\nfunction startTextAnimations() {\n\tdynamicTxt.classList.add(\"hidden\", \"animated\");\n\tclearInterval(quoteTextIntervalId);\n\t// console.log(\"STARTING ANIMATIONS on\", dynamicTxt);\n\n\t// first one is tspan.accum, skip it\n\tlet tspan = dynamicTxt.children[1];\n\tif(!tspan) return;\n\t// immediate animation of first character\n\ttspan.style.display = \"unset\";\n\n\tquoteTextIntervalId = setInterval(startTspanAnimation, textCharAddFrequency);\n\n\tfunction startTspanAnimation() {\n\t\t// protect from button mashing -> events firing off in quick succession\n\t\tif(tspan) tspan = tspan.nextSibling;\n\n\t\tif(tspan) tspan.style.display = \"unset\";\n\t\telse {\n\t\t\tclearInterval(quoteTextIntervalId);\n\t\t\tstartAuthorAnimations();\n\t\t}\n\t}\n}\n\nfunction fillQuoteText() {\n\tstillFirstLine = quoteTextBeingFilled = true;\n\tdynamicTxt.classList.add(\"dynamic\");\n\toutputTspans(quote.quote, addToDynamicTxt, doneWithTextTspans);\n}\n\nfunction onQuoteTextFilled() {\n\tquoteTextBeingFilled = false;\n}\n\nfunction fillQuoteTextImmediately() {\n\tclearInterval(quoteTextIntervalId);\n\tsvgTxt.style.transition = \"none\";\n\tdynamicTxt.classList.remove(\"animated\", \"hidden\", \"dynamic\");\n\t// force reflow\n\tsvgTxt.getBBox();\n\tsvgTxt.style.transition = \"\";\n\tonQuoteTextFilled();\n}\n",null,"//////////////////////////////////////////////////////\n// SHARE LOGIC\n\n\tdocument.getElementById(\"twit\").onclick = function (e) {\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\n\t\tif(!quote) return;\n\n\t\tif(quoteBeingFilled) {\n\t\t\tfillQuoteImmediately();\n\t\t}\n\n\t\tconst width  = 575,\n\t\t\theight = 450,\n\t\t\tleft   = window.innerWidth - width - 20,\n\t\t\ttop    = (window.innerHeight - height)/2,\n\t\t\turl    = `https://twitter.com/intent/tweet?hashtags=quotes&related=freecodecamp&text=${encodeURIComponent(`\"${quote.quote}\" ${quote.author}`)}`,\n\t\t\topts   = `status=1,\n\t\t\t\t\t\t\t\tresizable=1,\n\t\t\t\t\t\t\t\twidth=${width},\n\t\t\t\t\t\t\t\theight=${height},\n\t\t\t\t\t\t\t\tleft=${left},\n\t\t\t\t\t\t\t\ttop=${top}`;\n\n\t\twindow.open(url, 'twitter', opts);\n\t};\n"],"sourceRoot":"/source/"}